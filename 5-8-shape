abstract class Shape {
    abstract double calculateArea();

    abstract double calculateVolume();
}

class Sphere extends Shape {
    private double radius;

    // Constructor for Sphere
    public Sphere(double radius) {
        this.radius = radius;
    }

    @Override
    double calculateArea() {
        return 4 * Math.PI * radius * radius;
    }

    @Override
    double calculateVolume() {
        return (4.0 / 3.0) * Math.PI * Math.pow(radius, 3);
    }
}

class Cone extends Shape {
    private double radius;
    private double height;

    // Constructor for Cone
    public Cone(double radius, double height) {
        this.radius = radius;
        this.height = height;
    }

    @Override
    double calculateArea() {
        return Math.PI * radius * (radius + Math.sqrt(radius * radius + height * height));
    }

    @Override
    double calculateVolume() {
        return (1.0 / 3.0) * Math.PI * Math.pow(radius, 2) * height;
    }
}

class Cylinder extends Shape {
    private double radius;
    private double height;

    // Constructor for Cylinder
    public Cylinder(double radius, double height) {
        this.radius = radius;
        this.height = height;
    }

    @Override
    double calculateArea() {
        return 2 * Math.PI * radius * (radius + height);
    }

    @Override
    double calculateVolume() {
        return Math.PI * Math.pow(radius, 2) * height;
    }
}

public class ShapeExample {
    public static void main(String[] args) {
        Sphere sphere = new Sphere(5.0);
        Cone cone = new Cone(3.0, 7.0);
        Cylinder cylinder = new Cylinder(4.0, 6.0);

        // Calculate and display area and volume for each shape
        displayShapeDetails(sphere, "Sphere");
        displayShapeDetails(cone, "Cone");
        displayShapeDetails(cylinder, "Cylinder");
    }

    private static void displayShapeDetails(Shape shape, String shapeName) {
        System.out.println(shapeName + " - Area: " + shape.calculateArea());
        System.out.println(shapeName + " - Volume: " + shape.calculateVolume());
        System.out.println();
    }
}
